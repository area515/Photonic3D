fakeserial=true
removeJobOnCompletion=false
printerHostPort=9091
visibleCards=printers,printJobs,printables,settings
performedOneTimeInstall=false
limitLiveStreamToOneCPU=false
scriptEngineLanguage=js
forceCalibrationOnFirstUse=false

#Location where printables are stored
#uploaddir=/home/user/uploaddir
#Temporary unzip location
#printdir=/tmp/printdir

#Sends the force or forceprerelease to the start.sh script
#upgrade.directive=force

skins=[{"name":"Main skin", "welcomeFiles":["index.html"], "resourceBase": "resourcesnew", "active": true}, {"name":"PrintFlow TouchScreen", "welcomeFiles":["printflow.html"], "resourceBase": "printflow", "active": true}]
printerDrivers=[{"driverClassName":"org.area515.resinprinter.gcode.eGENERICGCodeControl","driverName":"eGENERIC", "prettyName":"Generic GCode"},{"driverClassName":"org.area515.resinprinter.gcode.PhotocentricGCodeControl","driverName":"Photocentric", "prettyName":"Photocentric"},{"driverClassName":"org.area515.resinprinter.gcode.SedgwickGCodeControl","driverName":"Sedgwick", "prettyName":"Sedgwick"},{"driverClassName":"org.area515.resinprinter.gcode.JavascriptControl","driverName":"Javascript", "prettyName":"Generic Javascript"}]

#These override what is shown in the DLNA properties when the printer search function is used
#manufacturer=[Name of printer manufacturer]
#deviceName=[Name of printer model]

feature.org.area515.resinprinter.discover.UPNPAdvertiser=true
feature.org.area515.resinprinter.usbimport.USBUploader=true
featureSettings.org.area515.resinprinter.usbimport.USBUploader={"configuredRoots":["/media", "/storage"]}
feature.org.area515.resinprinter.util.cron.CronFeature=true
featureSettings.org.area515.resinprinter.util.cron.CronFeature=[{"taskName":"Run kweb browser after a Photonic3D restart", "taskClassName":"org.area515.resinprinter.actions.osscript.ExecuteNativeOSCommandRunnable", "cronString":"@reboot", "taskSettings":{"shellCommands":["kweb", "-KZJE", "{0}/printflow.html"]}}, {"taskName":"Tear down kweb browser when someone kills Photonic3D", "taskClassName":"org.area515.resinprinter.actions.osscript.ExecuteNativeOSCommandRunnable", "cronString":"@stop", "taskSettings":{"shellCommands":["pkill", "-9f", "kweb"]}}]
#featureSettings.org.area515.resinprinter.util.cron.CronFeature=[{"taskName":"Show directory listing in Windows every night at 1:15am", "taskClassName":"org.area515.resinprinter.actions.osscript.ExecuteNativeOSCommandRunnable", "cronString":"15 1 * * *", "taskSettings":{"shellCommands":["cmd", "/c", "dir"]}}]

#notify.org.area515.resinprinter.notification.EmailOnCompletionNotifier=true
#notify.org.area515.resinprinter.notification.PauseOnErrorNotifier=true
notify.org.area515.resinprinter.notification.WebSocketPrintJobNotifier=true
notify.org.area515.resinprinter.notification.WebSocketPrinterNotifier=true
notify.org.area515.resinprinter.notification.WebSocketHostNotifier=true

printFileProcessor.org.area515.resinprinter.job.ZipImagesFileProcessor=true
printFileProcessor.org.area515.resinprinter.job.CreationWorkshopSceneFileProcessor=true
printFileProcessor.org.area515.resinprinter.job.STLFileProcessor=true
printFileProcessor.org.area515.resinprinter.minercube.MinerCubePrintFileProcessor=true
printFileProcessor.org.area515.resinprinter.printphoto.ImagePrintFileProcessor=true
printFileProcessor.org.area515.resinprinter.text.TextFilePrintFileProcessor=true
printFileProcessor.org.area515.resinprinter.printphoto.SVGImagePrintFileProcessor=true
printFileProcessor.org.area515.resinprinter.printphoto.micoin.CoinFileProcessor=true

displayDevice.org.area515.resinprinter.display.dispmanx.RaspberryPiMainLCDScreen=true
displayDevice.org.area515.resinprinter.display.dispmanx.RaspberryPiForceTVScreen=true
displayDevice.org.area515.resinprinter.display.LastAvailableDisplay=true
displayDevice.org.area515.resinprinter.display.SimulatedDisplay=true

#Only enable this when there is at least one admin user!!!  
#useAuthentication=true
UserManagementFeatureImplementation=org.area515.resinprinter.security.keystore.KeystoreLoginService

#http://www.optoma.de/uploads/RS232/DS309-RS232-en.pdf
#https://github.com/area515/Creation-Workshop-Host/files/129785/RS232_codes.pdf
#https://github.com/area515/Creation-Workshop-Host/files/88303/RS232_Control_Codes_H6510BD.pdf
#http://www.viewsoniceurope.com/asset-files/files/user_guide/pjd7820hd/28077.pdf
hexCodeBasedProjectors=[{"name":"Optoma (HD141x)", "defaultComPortSettings":{"speed":9600, "databits":8, "parity":"None", "stopbits":"One"}, "onHex":"7E303030302031", "offHex":"7E303030302032", "bulbHoursHex":"7E30303135302031", "bulbHoursResponseRegex":"(?s:OK(?:0|1)(\\\\d{4}.*))", "bulbHoursConversion":"ASCII"},{"name":"Vivitek (D535)","defaultComPortSettings":{"speed":9600, "databits":8, "parity":"None", "stopbits":"One"}, "onHex":"7E504E0D", "offHex":"7E50460D","bulbHoursHex":"7E714C0D(function (){java.lang.Thread.sleep(100);})()","bulbHoursResponseRegex":"[^\\\\d]*(\\\\d+)\\\\x0D?", "bulbHoursConversion":"ASCII", "detectionHex":"7E504E0D(function (){java.lang.Thread.sleep(1);})()7E71560D", "detectionResponseRegex":"(?s:.*DP3406.*\\\\x0D?)"}, {"name":"Acer","defaultComPortSettings":{"speed":9600, "databits":8, "parity":"None", "stopbits":"One"},"onHex":"4F4B4F4B4F4B4F4B4F4B0D", "offHex":"2A2030204952203030320D", "detectionHex":"2A2030204C616D70203F0D", "detectionResponseRegex":"(?s:.*?)(?i:Lamp) [10](?s:.*?)"}, {"name":"ViewSonic (pjd7820hd)","defaultComPortSettings":{"speed":115200, "databits":8, "parity":"None", "stopbits":"One"},"onHex":"0614000400341100005D", "offHex":"0614000400341101005E", "bulbHoursHex":"0714000500340000150163", "bulbHoursResponseRegex":"\\\\x05\\\\x14\\\\x00\\\\x06\\\\x00\\\\x00\\\\x00([\\\\x00-\\\\xFF]{2})\\\\x00\\\\x00[\\\\x00-\\\\xFF]", "bulbHoursConversion":"LittleEndian", "detectionHex":"071400050034000011005E", "detectionResponseRegex":"(?s:.*(?:\\\\x05\\\\x14\\\\x00\\\\x03\\\\x00\\\\x00\\\\x00[\\\\x00\\\\x01][\\\\x17\\\\x18]|\\\\x03\\\\x14\\\\x00\\\\x00\\\\x00\\\\x14)\\\\x0D?)"}]

# Currently the only impl available
SerialCommunicationsImplementation=org.area515.resinprinter.serial.JSSCCommPort

NetworkManagerImplementation=org.area515.resinprinter.network.LinuxNetworkManager
#NetworkManagerImplementation=org.area515.resinprinter.network.MockNetworkManager

#None of this is used...
#===============================
#Linux
#connectToWifiSSIDCommand=["/bin/sh", "-c", "iwconfig {0} essid {1} key s:{2}"]
#discoverSSIDCommand=["/bin/sh", "-c", "iwlist {0} scan 2>&1| grep ESSID | awk -F\\"\\\\\\"\\" '''{ print $2 }'''"]
#discoverNetworkInterfaceCommand=["/bin/sh", "-c", "ifconfig | grep Link | awk '''{ print $1 }'''"]
#Windows (I'm not sure who would ever use this)
#connectToWifiSSIDCommand=netsh wlan connect name={1}
#discoverSSIDCommand=powershell -Command "netsh wlan show profiles interface=Wi-Fi | %'{ $_.Split('':'')[1].trim(); }'"
#discoverNetworkInterfaceCommand=blank for windows
#fakedisplay=true


#0=x(width), 1=y(height)
imagingCommand=["raspistill", "-t", "1", "-n", "-w", "{0}", "-h", "{1}", "-o", "-"]
#Hack of the year award if you uncomment the following line!! Hey, it works awesome for testing...
#imagingCommand=["cmd", "/c", "java -cp C:\\\\Users\\\\wgilster\\\\git\\\\Creation-Workshop-Host\\\\host\\\\srcbin org.area515.resinprinter.image.ServerTimeJPEG {0} {1}"]
streamingCommand=["raspivid", "-ih", "-w", "{0}", "-h", "{1}", "-n", "-t", "0", "-o", "-"]
#streamingCommand=["cmd", "/c", "type c:\\\\Users\\\\wgilster\\\\desktop\\\\stuff.mp4"]

#0=Process id
#====================
#Linux
dumpStackTraceCommand=["kill", "-3", "{0}"]

#Linux
rebootCommand=["reboot"]

useSSL=false
#If the above option is true, all of the following must be specified
#===================================================================
keystoreFilename=web.keystore
keystorePassword=keystorePassword
keypairPassword=keypairPassword
securityRealmName=CWH3DPrinterRealm

#Don't use "realm.clientUsername and realm.clientPassword" in this file, users are now stored in an implementation specific fashion designated by the property: UserManagementFeatureImplementation
#If you are interested in adding a user to your implementation specific user manager then add these two parameters to the config.properties located in the 3dprinters directory. This will migrate that user automatically.
#CWH3DPrinterRealm.clientUsername=admin
#CWH3DPrinterRealm.clientPassword=password
#This class enforces all keys to have same password sun.security.ssl.SunX509KeyManagerImpl.SunX509KeyManagerImpl(KeyStore, char[])
#So we must have another keystore for users
userKeystoreFilename=users.keystore
userKeystorePassword=usersKeystorePassword

#The following is an optional parameter.
#You only need to specify this parameter if you have a certificate signed by a CA.
#This certificate must be imported into into the keystore specified in the "keystoreFilename" key in this property file.
#The certificate must be imported into the keystore using the alias specified below.
#This MUST also be the hostname that the certificate was issued to.
#*****************************************
#externallyAccessableName=Name of the alias AND hostname that CA issued cert to
#=================================================================================

printerProfileRepo=area515/Photonic3D

#All of the following are for the email notification
#===================================================
#notify.org.area515.resinprinter.notification.EmailOnCompletionNotifier=true
toEmailAddresses=youremailaddress@gmail.com,anotherusername@gmail.com
serviceEmailAddresses=yourprintermanufacturer@gmail.com
username=username
password=password
smtpServer=smtp.googlemail.com
smtpPort=587
mail.smtp.starttls.enable=true
